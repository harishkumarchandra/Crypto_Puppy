{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","Component","Main","_this","onSubmit","event","preventDefault","name","productName","value","image","productImage","price","window","web3","utils","toWei","productPrice","toString","createProduct","type","ref","input","placeholder","required","scope","products","map","product","key","src","concat","alt","border","height","width","fromWei","owner","purchased","onClick","purchaseProduct","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","productCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","Marketplace","networks","marketplace","Contract","abi","address","methods","i","toConsumableArray","_this2","send","from","once","transactionHash","location","reload","_this3","components_Navbar","role","components_Main","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.848731f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"https://github.com/vmieres/Blockchain_Marketplace\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          CryptoPuppies Marketplace\r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        <h3>Add CryptoPuppy</h3>\r\n        <form onSubmit={(event) => {\r\n          event.preventDefault()\r\n          const name = this.productName.value\r\n          const image = this.productImage.value\r\n          const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\r\n          this.props.createProduct(name, image, price)\r\n        }}>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"productName\"\r\n              type=\"text\"\r\n              ref={(input) => { this.productName = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Product Name\"\r\n              required />\r\n          </div>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"productImage\"\r\n              type=\"text\"\r\n              ref={(input) => { this.productImage = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Product Image\"\r\n              required />\r\n          </div>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"productPrice\"\r\n              type=\"text\"\r\n              ref={(input) => { this.productPrice = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Product Price\"\r\n              required />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\r\n        </form>\r\n        <p>&nbsp;</p>\r\n        <h3>Buy CryptoPuppy</h3>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Image</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Owner</th>\r\n              <th scope=\"col\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"productList\">\r\n            {this.props.products.map((product, key) => {\r\n              const image = product.image;\r\n              return (\r\n                <tr key={key}>\r\n                  <th scope=\"row\">{product.id.toString()}</th>\r\n                  <td>{product.name}</td>\r\n                  <td>\r\n                  <div><img id=\"dapp-image\" src={`https://gateway.pinata.cloud/ipfs/${image}`} alt=\"\" border=\"3\" height=\"200\" width=\"200\"/></div>\r\n                  </td>\r\n                  <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\r\n                  <td>{product.owner}</td>\r\n                  <td>\r\n                    {!product.purchased\r\n                      ? <button\r\n                        name={product.id}\r\n                        value={product.price}\r\n                        onClick={(event) => {\r\n                          this.props.purchaseProduct(event.target.name, event.target.value)\r\n                        }}\r\n                      >\r\n                        Buy\r\n                        </button>\r\n                      : null\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport Marketplace from '../abis/Marketplace.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Marketplace.networks[networkId]\r\n    if(networkData) {\r\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address)\r\n      this.setState({ marketplace })\r\n      const productCount = await marketplace.methods.productCount().call()\r\n      this.setState({ productCount })\r\n      // Load products\r\n      for (var i = 1; i <= productCount; i++) {\r\n        const product = await marketplace.methods.products(i).call()\r\n        this.setState({\r\n          products: [...this.state.products, product]\r\n        })\r\n      }\r\n      this.setState({ loading: false})\r\n    } else {\r\n      window.alert('Marketplace contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      productCount: 0,\r\n      products: [],\r\n      loading: true\r\n    }\r\n\r\n    this.createProduct = this.createProduct.bind(this)\r\n    this.purchaseProduct = this.purchaseProduct.bind(this)\r\n  }\r\n\r\n  createProduct(name, image, price) {\r\n    this.setState({ loading: true })\r\n    this.state.marketplace.methods.createProduct(name, image, price).send({ from: this.state.account })\r\n    .once('transactionHash', (transactionHash) => {\r\n      this.setState({ loading: false })\r\n      window.location.reload();\r\n    })\r\n  }\r\n\r\n  purchaseProduct(id, price) {\r\n    this.setState({ loading: true })\r\n    this.state.marketplace.methods.purchaseProduct(id).send({ from: this.state.account, value: price })\r\n    .once('transactionHash', (transactionHash) => {\r\n      this.setState({ loading: false })\r\n      window.location.reload();\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\r\n              { this.state.loading\r\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\r\n                : <Main\r\n                  products={this.state.products}\r\n                  createProduct={this.createProduct}\r\n                  purchaseProduct={this.purchaseProduct} />\r\n              }\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}